{"version":3,"sources":["./src/app/members/status/status.page.html","./src/app/members/status/status.module.ts","./src/app/members/status/status.page.scss","./src/app/members/status/status.page.ts"],"names":[],"mappings":"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","file":"status-status-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button style=\\\"color: rgb(42, 129, 170)\\\"></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title><span style=\\\"float: left; width: 80%; text-align: left;\\\">ORDER STATUS </span>\\n        </ion-title>\\n\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n    <div *ngIf=\\\"order != null\\\">\\n        <div class=\\\"flex-container-horizontal\\\">\\n            <img *ngIf=\\\"currentStatus != 'COMPLETED' && currentStatus != 'CLOSED'\\\" src=\\\"../../../assets/images/giphy.gif\\\" height=\\\"300\\\">\\n            <img *ngIf=\\\"currentStatus == 'COMPLETED' || currentStatus == 'CLOSED'\\\" src=\\\"../../../assets/images/correct.png\\\" height=\\\"300\\\">\\n        </div>\\n        <br>\\n        <br>\\n        <div class=\\\"flex-container-vertical\\\">\\n            <h4> <span style=\\\"font-weight: lighter; padding-bottom: 2px; border-bottom: 1px solid white;\\\">CURRENT\\n                    STATUS:\\n                </span> </h4>\\n\\n            <h1 *ngIf=\\\"currentStatus != 'COMPLETED'\\\"><span style=\\\"font-weight: bold; padding-bottom: 2px; color: rgb(241, 228, 23);\\\"> {{currentStatus}} </span>\\n            </h1>\\n\\n            <h1 *ngIf=\\\"currentStatus == 'COMPLETED'\\\"><span style=\\\"font-weight: bold; padding-bottom: 2px; color: rgb(56, 243, 23);\\\"> COMPLETED </span></h1>\\n\\n            <div></div>\\n            <div style=\\\"margin-top: 15vh;\\\" class=\\\"flex-container-horizontal\\\">\\n                <ion-button (click)=\\\"navigateToDashboard()\\\" color=\\\"success\\\">Order Again?</ion-button> &nbsp;\\n                <ion-button *ngIf=\\\"currentStatus == 'COMPLETED'\\\" (click)=\\\"closeOrder()\\\" color=\\\"danger\\\">Complete Order\\n                </ion-button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"order == null\\\" class=\\\"flex-container-vertical\\\">\\n        <h5 style=\\\"color: rgb(155, 152, 158); margin-top: 45vh;\\\"> NO ITEMS IN CART</h5>\\n    </div>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatusPage } from './status.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatusPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StatusPage]\n})\nexport class StatusPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvc3RhdHVzL3N0YXR1cy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { RestService } from 'src/app/services/rest.service';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { Dialogs } from '@ionic-native/dialogs/ngx';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.page.html',\n  styleUrls: ['./status.page.scss'],\n})\nexport class StatusPage implements OnInit {\n\n  order: any = null;\n  currentStatus: any = null;\n\n  constructor(private rest: RestService,\n    private loading: LoadingController,\n    private storage: Storage,\n    private dialogs: Dialogs,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.loading.create({\n      message: 'Completing your order',\n      spinner: 'dots',\n      showBackdrop: true,\n    }).then(loading => {\n\n      loading.present();\n      this.storage.ready().then(() => {\n\n        this.storage.get('placedOrder').then((res) => {\n          this.order = res;\n         \n          if (res) {\n            this.rest.getSubOrder(this.order.sub_order_id).subscribe((res: any) => {\n               loading.dismiss();\n              this.currentStatus = res.status;\n            });\n          }\n          else {\n             loading.dismiss();\n          }\n\n\n          // Fetch status of order after every 5 seconds\n         let interval =  window.setInterval(() => {\n\n            this.rest.getSubOrder(this.order.sub_order_id).subscribe((res: any) => {\n              this.currentStatus = res.status;\n\n              this.rest.getOrder(this.order.order_id).subscribe((res: any) => {\n                if (res.order_status == \"CLOSED\") {\n                  window.clearInterval(interval);\n                  this.dialogs.alert(\"Your order closed successfully, Thank you for using Treggo Technical Restaurant :) \", \"SUCCESS\").then((res) => {\n                    this.router.navigate(['home']);\n                  })\n                }\n              })\n            });\n\n          }, 5000);\n\n          \n\n        });\n\n      });\n\n    });\n  }\n\n\n  navigateToDashboard() {\n    this.router.navigate(['menu', 'dashboard']);\n  }\n\n  closeOrder() {\n    let dto1 = {\n      status: 'COMPLETED',\n      subOrderId: this.order.sub_order_id\n    };\n\n    this.rest.updateSubOrder(dto1).subscribe((res: any) => {\n\n      let dto2 = {\n        status: 'CLOSED',\n        order_id: this.order.order_id\n      };\n\n      this.rest.updateOrder(dto2).subscribe((res: any) => {\n\n        this.dialogs.alert(\"Your order closed successfully, Thank you for using Treggo Technical Restaurant :) \", \"SUCCESS\").then((res) => {\n          this.router.navigate(['home']);\n        })\n      },\n        err => {\n          this.dialogs.alert(\"Unable to close order, Please Contact Admin \", \"ERROR\");\n        })\n\n    },\n      err => {\n        this.dialogs.alert(\"Unable to close order, Please Contact Admin \", \"ERROR\");\n      });\n  }\n\n}\n"],"sourceRoot":""}